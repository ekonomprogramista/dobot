{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"INFORMACJE OG\u00d3LNE","text":"<p>Ta strona zosta\u0142a stworzona z my\u015bl\u0105 o uczniach na kierunku technik programista, aby u\u0142atwi\u0107 wam prac\u0119 z robotami. Znajdziecie tutaj wszystkie niezb\u0119dne informacje, kt\u00f3re pomog\u0105 wam w pe\u0142ni wykorzysta\u0107 potencja\u0142 urz\u0105dze\u0144. Niezale\u017cnie od tego, czy dopiero zaczynasz swoj\u0105 przygod\u0119 z robotyk\u0105, czy jeste\u015b ju\u017c zaawansowanym u\u017cytkownikiem, ta dokumentacja jest dla ciebie.</p> <p>Zawarto\u015b\u0107 strony:</p> <ul> <li>Instrukcje krok po kroku \u2013 Przejrzyste przewodniki, kt\u00f3re poprowadz\u0105 ci\u0119 przez proces konfiguracji i programowania robot\u00f3w.</li> <li>Wskaz\u00f3wki i najlepsze praktyki \u2013 Praktyczne porady od do\u015bwiadczonych u\u017cytkownik\u00f3w, kt\u00f3re pomog\u0105 unikn\u0105\u0107 typowych b\u0142\u0119d\u00f3w i usprawni\u0105 prac\u0119.</li> <li>Przyk\u0142adowe programy \u2013 Inspiruj\u0105ce pomys\u0142y na programy, kt\u00f3re pozwol\u0105 ci zastosowa\u0107 zdobyt\u0105 wiedz\u0119 w praktyce.</li> </ul> <p>Powodzenia w tworzeniu!</p> <p>Informacja</p> <p>Strona jest stale aktualizowana o nowe tre\u015bci, je\u017celi brakuje istotnych informacji - daj nam zna\u0107!</p>"},{"location":"csharpdobot/","title":"C# I DOBOT","text":"<p>C# to jeden z popularniejszych j\u0119zyk\u00f3w programowania, kt\u00f3ry jest szeroko stosowany w aplikacjach desktopowych, webowych oraz w \u015brodowiskach automatyki i robotyki. Dzi\u0119ki bibliotekom i interfejsom API, C# mo\u017ce by\u0107 u\u017cywany do programowania robot\u00f3w, takich jak Dobot.</p> <p>Dzi\u0119ki SDK (Software Development Kit) udost\u0119pnianemu przez producenta robota, mo\u017cna z \u0142atwo\u015bci\u0105 napisa\u0107 aplikacj\u0119 do kontrolowania robota w C#. W naszej dokumentacji u\u017cywamy klasy <code>Dobot</code></p>"},{"location":"csharpdobot/#jak-zaczac","title":"JAK ZACZ\u0104\u0106?","text":"<p>Do rozpocz\u0119cia pracy, potrzebne b\u0119dzie nam IDE (zalecamy Vistual Studio) i sterownik do portu wirtualnego.</p> <p>Adresy do strony</p> <p>Vistual Studio 2022 https://visualstudio.microsoft.com/pl/ Sterownik CP210x: https://www.silabs.com/software-and-tools/usb-to-uart-bridge-vcp-drivers?tab=downloads Potrzebne pliki https://github.com/ekonomprogramista/dobot/blob/main/csharp_files.zip</p> <ol> <li>Stw\u00f3rz nowy projekt - Aplikacja Konsoli (.NET 7.0)</li> <li>W zak\u0142adce Kompilowanie &gt; Mened\u017cer konfiguracji w polu Aktywne platformy rozwi\u0105zania kliknij , nast\u0119pnie wybierz platform\u0119 x86 i kopiuj ustawienia z Any CPU <li>W polu Konteksty projektu upewnij si\u0119 \u017ce otwarty projekt ma wybran\u0105 platform\u0119 x86</li> <li>Dodaj folder z klasami do obs\u0142ugi robota</li> <li>Upewnij si\u0119 \u017ce w folderze bin/x86/Debug/net7.0 masz wrzucone wszystkie pliki .dll</li> <li>Zainstaluj wcze\u015bniej wspomniany sterownik</li> <li>Pod\u0142\u0105cz Dobota do komputera do\u0142\u0105czonym do zestawu kablem USB</li> <li>Ustaw rami\u0119 robota w odpowiedniej pozycji - tak aby p\u00f3\u017aniejsze ruchy nie powodowa\u0142y zaci\u0119\u0107 oraz aby ustalanie koordynat by\u0142o \u0142atwiejsze</li> <li>W\u0142\u0105cz robota, zaczekaj a\u017c dioda na jego podstawie zmieni kolor na zielony</li> <li>U\u017cywaj\u0105c Mened\u017cera urz\u0105dze\u0144, ustal jakiego portu u\u017cywa Dobot (COM) <li>Zacznij programowa\u0107. Aby przekaza\u0107 kod do Dobota, post\u0119puj w ten sam spos\u00f3b jak przy uruchamianiu normalnego kodu konsolowego</li> <p>Uwaga!</p> <p>Uwa\u017caj! Przed rozpocz\u0119ciem prac, zmie\u0144 przestrze\u0144 nazw (namespace) wszystkich plik\u00f3w .cs w folderze CPlusDLL do obs\u0142ugi DLL. W przeciwnym wypadku nie nawi\u0105\u017cesz po\u0142\u0105czenia z robotem!</p> <p>Program eksperymentalny</p> <p>Praca z Dobotem u\u017cywaj\u0105c C# jest jeszcze w fazie testowania, pewne funkcje mog\u0105 nie dzia\u0142a\u0107 tak jak powinny, a w dokumentacji mog\u0105 by\u0107 pomy\u0142ki</p>"},{"location":"csharpdobot/#kluczowe-metody","title":"KLUCZOWE METODY","text":"<pre><code>/// &lt;summary&gt;\n/// Tworzy now\u0105 instancj\u0119 obiektu Dobot, \u0142\u0105cz\u0105c si\u0119 z urz\u0105dzeniem za pomoc\u0105 podanego portu i pr\u0119dko\u015bci transmisji\n/// &lt;/summary&gt;\n/// &lt;param name=\"port\"&gt;Port, do kt\u00f3rego urz\u0105dzenie jest pod\u0142\u0105czone (np. \"COM1\").&lt;/param&gt;\n/// &lt;param name=\"baudRate\"&gt;Pr\u0119dko\u015b\u0107 transmisji (np. 9600, 115200).&lt;/param&gt;\nnew Dobot(*string port*, *int baudRate*)\n</code></pre> <pre><code>/// &lt;summary&gt;\n/// Sprawdza czy uda\u0142o si\u0119 nawi\u0105za\u0107 po\u0142\u0105czenie\n/// &lt;/summary&gt;\n/// &lt;returns&gt;True, je\u015bli po\u0142\u0105czenie zosta\u0142o nawi\u0105zane, false w przeciwnym razie.&lt;/returns&gt;\n.Connect() &lt;bool&gt;\n</code></pre> <pre><code>/// &lt;summary&gt;\n/// Ustawia parametry pocz\u0105tkowe robota (konieczne do dzia\u0142ania)\n/// &lt;/summary&gt;\n.SetParams()\n</code></pre> <pre><code>/// &lt;summary&gt;\n/// Sprawdza i wypisuje alarmy\n/// &lt;/summary&gt;\n.AlarmTest()\n</code></pre> <pre><code>/// &lt;summary&gt;\n/// Czy\u015bci aktywne alarmy\n/// &lt;/summary&gt;\n.ClearAlarms()\n</code></pre> <pre><code>/// &lt;summary&gt;\n/// Zwraca pozycj\u0119 ramienia\n/// &lt;/summary&gt;\n/// &lt;returns&gt;Enum Pose, kt\u00f3ry zawiera koordynaty&lt;/returns&gt;\n.GetPose()\n</code></pre> <pre><code>/// &lt;summary&gt;\n/// Ustala pr\u0119dko\u015b\u0107 i przyspieszenie dla ruchu PTP (Point to Point)\n/// &lt;/summary&gt;\n/// &lt;param name=\"velocity\"&gt;Pr\u0119dko\u015b\u0107&lt;/param&gt;\n/// &lt;param name=\"acceleration\"&gt;Przyspieszenie&lt;/param&gt;\n.SetPTPSpeed(*float velocity*, *float acceleration*)\n</code></pre> <pre><code>/// &lt;summary&gt;\n/// Dodaje do kolejki ruch PTP (Point to Point) do podanych wsp\u00f3\u0142rz\u0119dnych\n/// &lt;/summary&gt;\n/// &lt;param name=\"style\"&gt;Styl ruchu (np. 0 - szybki, 1 - dok\u0142adny itp.)&lt;/param&gt;\n/// &lt;param name=\"x\"&gt;Wsp\u00f3\u0142rz\u0119dna X docelowego punktu&lt;/param&gt;\n/// &lt;param name=\"y\"&gt;Wsp\u00f3\u0142rz\u0119dna Y docelowego punktu&lt;/param&gt;\n/// &lt;param name=\"z\"&gt;Wsp\u00f3\u0142rz\u0119dna Z docelowego punktu&lt;/param&gt;\n/// &lt;param name=\"r\"&gt;Rotacja&lt;/param&gt;\n.PTP(*byte style*, *float x,* *float y*, *float z*, *float r*)\n</code></pre> <pre><code>/// W\u0142\u0105cza lub wy\u0142\u0105cza przyssawk\u0119.\n/// &lt;/summary&gt;\n/// &lt;param name=\"enable\"&gt;Je\u015bli warto\u015b\u0107 to true, przyssawka zostanie w\u0142\u0105czona. Je\u015bli false, przyssawka zostanie wy\u0142\u0105czona&lt;/param&gt;\n.SetSuctionCup(*bool enable*)\n</code></pre> <pre><code>/// &lt;summary&gt;\n/// W\u0142\u0105cza lub wy\u0142\u0105cza chwytak.\n/// &lt;/summary&gt;\n/// &lt;param name=\"enable\"&gt;Je\u015bli warto\u015b\u0107 to true, chwytak zostanie w\u0142\u0105czony. Je\u015bli false, chwytak zostanie wy\u0142\u0105czony&lt;/param&gt;\n.SetGripper(*bool enable*)\n</code></pre>"},{"location":"csharpdobot/#przykadowy-program","title":"PRZYK\u0141ADOWY PROGRAM","text":"<pre><code>class Program\n{\n    static void Main(string[] args)\n    {\n        Dobot robot = new Dobot(\"COM4\", 115200);\n        if (!robot.Connect())\n        {\n            Console.WriteLine(\"Nie uda\u0142o si\u0119 po\u0142\u0105czy\u0107 z Dobotem.\");\n            return;\n        }\n\n        robot.SetParams();\n        robot.SetPTPSpeed(30, 30);\n        robot.ClearAlarms();\n        robot.AlarmTest();\n        Thread.Sleep(1000);\n        robot.PTP(1, 200, 0, -10, 0);\n        robot.SetSuctionCup(true);\n        robot.PTP(1, 180, 100, -20, 0);\n        robot.PTP(1, 180, 100, -20, 50);\n        robot.SetSuctionCup(false);\n    }\n}\n</code></pre>"},{"location":"dobotblock/","title":"LABORATORIUM DOBOTBLOCK","text":"<p>Sukces! Uda\u0142o Ci si\u0119 po\u0142\u0105czy\u0107 z robotem \u2013 mo\u017cemy przej\u015b\u0107 do pracy. DobotLab posiada kilka rodzaj\u00f3w laboratori\u00f3w, ka\u017cdy o innym przeznaczeniu ale o podobnej zasadzie dzia\u0142ania.</p> <p>DobotBlock jest w\u0142a\u015bnie jednym z nich. Zapewne w szkole podstawowej robi\u0142e\u015b proste programy w Scratchu oparte o wizualne elementy (puzzle) w jakim\u015b okre\u015blonym porz\u0105dku. Taki porz\u0105dek mo\u017cna nazwa\u0107 algorytmem, czyli list\u0105 krok\u00f3w potrzebnych czynno\u015bci do osi\u0105gni\u0119cia jakiego\u015b celu. W DobotBlock wygl\u0105da to identycznie jak w Scratchu. Z listy kontrolek przeci\u0105gamy interesuj\u0105ce nas komponenty.</p> <p>Tak samo wygl\u0105da proces uruchomienia i zatrzymywania kodu \u2013 naciskamy ikonk\u0119 zielonej flagi lub czerwony sze\u015bciok\u0105t.</p> <p>Wskaz\u00f3wka</p> <p>Nie zapomnij o inicjalizacji robota dodaj\u0105c blok startowy!</p>"},{"location":"dobotgraphics/","title":"LABORATORIUM RYSUNKU I GRAFIKI","text":"<p>Laboratorium rysunku pozwala na konwersj\u0119 obraz\u00f3w lub tekstu na trajektorie ruchu robota, tak aby m\u00f3g\u0142 je narysowa\u0107 na powierzchni za pomoc\u0105 uchwytu z d\u0142ugopisem lub pisakiem.</p> <p>To doskona\u0142e \u015brodowisko dla pocz\u0105tkuj\u0105cych \u2013 nie wymaga umiej\u0119tno\u015bci programowania. Rysunki generowane s\u0105 automatycznie na podstawie wgranych grafik lub wpisanego tekstu.</p> <p>Jak korzysta\u0107 z laboratorium?</p> <ol> <li>         Wybierz opcj\u0119:         <ul> <li>Importuj obraz u\u017cywaj\u0105c przycisku Otw\u00f3rz.</li> <li>Wpisz tekst w polu tekstowym i kliknij przycisk Dodaj</li> </ul> </li> <li>         Ustaw upragnione parametry grafiki, m.in:         <ul> <li>Rozmiar</li> <li>Pozycja na podgl\u0105dzie</li> <li>Styl tekstu</li> </ul> </li> </ol> <p>Uwaga!</p> <p>Przy wybraniu grafiki o innym formacie ni\u017c .svg konieczna b\u0119dzie konwersja, co mo\u017ce skutkowa\u0107 gorszym efektem ko\u0144cowym</p> <p>Wskaz\u00f3wka</p> <p>U\u017cywaj obraz\u00f3w o wysokim kontra\u015bcie \u2013 najlepiej czarno-bia\u0142ych.</p> <p>Informacja</p> <p>Robot rysuje tylko \u015bcie\u017cki \u2013 nie \"drukuje\" kolor\u00f3w.</p>"},{"location":"dobotlab/","title":"OG\u00d3LNE","text":"<p>\u015arodowisko Dobot Lab jest konieczne do programowania robota Magician. To w\u0142a\u015bnie w nim piszemy kod, kt\u00f3ry zostanie wgrany do naszego robota. Aby zainstalowa\u0107 \u015brodowisko Dobot Lab, przejd\u017a na stron\u0119:\u00a0 https://www.dobot-robots.com/service/download-center, a nast\u0119pnie pobierz dwa wymagane instalatory: DobotLab Win Local oraz DobotLink Win Local.</p> <p>Oprogramowanie</p> <p>Na dzie\u0144 pisania dokumentacji zalecana wersje oprogramowania: DobotLab V2.3.4 ; DobotLink V6.7.4</p> <p>Uwaga!</p> <p>Do instalacji wymagane s\u0105 uprawnienia administratorskie.</p> <p>Uwaga!</p> <p>Przy instalowaniu na komputer aplikacji DobotLink mog\u0105 wyst\u0105pi\u0107 b\u0142\u0119dy, kt\u00f3re skutkuj\u0105 tym, \u017ce wymagany sterownik nie zostanie poprawnie pobrany. Zaobserwowa\u0107 mo\u017cna to wchodz\u0105c w mened\u017cer urz\u0105dze\u0144 \u2013 pod\u0142\u0105czony robot powinien znajdowa\u0107 si\u0119 w swojej w\u0142asnej, nowej kategorii w li\u015bcie. Je\u017celi wyst\u0105pi b\u0142\u0105d instalacji sterownika, nale\u017cy odinstalowa\u0107 aplikacj\u0119 DobotLink oraz przej\u015b\u0107 przez instalator ponownie.</p>"},{"location":"dobotlab/#aczenie-robota-ze-stanowiskiem-pracy","title":"\u0141\u0104CZENIE ROBOTA ZE STANOWISKIEM PRACY","text":"<p>Po zainstalowaniu na komputer potrzebnych aplikacji, i upewnieniu si\u0119, \u017ce dzia\u0142aj\u0105 one poprawnie, mo\u017cemy przej\u015b\u0107 do \u0142\u0105czenia si\u0119 z naszym robotem</p> <ol> <li>Przed pod\u0142\u0105czeniem robota upewnij si\u0119, \u017ce robot jest wy\u0142\u0105czony. W\u0142\u0105cz go dopiero po uruchomieniu DobotLab \u2013 niekt\u00f3re modele wykrywaj\u0105 si\u0119 lepiej w tej kolejno\u015bci</li> <li>Ustaw rami\u0119 robota w odpowiedniej pozycji - tak aby p\u00f3\u017aniejsze ruchy nie powodowa\u0142y zaci\u0119\u0107 oraz aby ustalanie koordynat by\u0142o \u0142atwiejsze</li> <li>     Uruchom DobotLab i wybierz dowolne laboratorium (np. DobotBlock lub Python)         <ol> <li>Je\u017celi wybra\u0142e\u015b laboratorium DobotBlock, kliknij w przycisk \u0142\u0105czenia, a w otwartym oknie wybierz port do kt\u00f3rego pod\u0142\u0105czony jest Magician</li> <li>Je\u017celi wybra\u0142e\u015b laboratorium Python, kliknij na list\u0119 rozwijaln\u0105 po prawej stronie paska nawigacji, i wybierz z listy opcj\u0119 Magician</li> </ol> </li> </ol>"},{"location":"dobotpython/","title":"LABORATORIUM PYTHON","text":"<p>Laboratorium Python w DobotLab pozwala na bardziej precyzyjne i zaawansowane sterowanie robotem Magician. W przeciwie\u0144stwie do DobotBlock, nie u\u017cywamy tutaj \u201epuzzli\u201d, tylko piszemy kod w j\u0119zyku programowania Python. To idealna okazja, aby wykorzysta\u0107 poznane elementy programowania w praktyce!</p> <p>Nie musisz zna\u0107 wszystkich funkcji na pami\u0119\u0107! W laboratorium Python w DobotLab dost\u0119pny jest przybornik z funkcjami, kt\u00f3ry znajduje si\u0119 po lewej stronie edytora. Wystarczy klikn\u0105\u0107 wybran\u0105 funkcj\u0119 z listy \u2013 w miejscu kursora w panelu tekstowym pojawi si\u0119 jej sk\u0142adnia. Dzi\u0119ki temu mo\u017cesz \u0142atwo korzysta\u0107 z dost\u0119pnych polece\u0144 bez przeszukiwania dokumentacji zewn\u0119trznej.</p> <p></p> <p>Przyk\u0142adowy program:</p> <pre><code># version: Python3\n# Program z przyssawk\u0105, przemieszczaj\u0105cy obiekty mi\u0119dzy dwoma punktami\n\nfrom DobotEDU import *\nfloorY1 = -50\nfloorY2 = -30\n\nmagician.motion_params(80, 80)\n\ndef GoToPos(pos_x, pos_y, pos_z, mode):\n    if mode != 0 and mode != 1 and mode != 2: return\n    magician.ptp(mode=mode, x=pos_x, y=pos_y, z=pos_z, r=0)\n\ndef SuctionHandle(switch):\n    magician.set_endeffector_suction cup (enable=True, on-switch)\n\nwhile True:\n    SuctionHandle(False)\n    GoToPos(250, 0, 50, 0)\n    GoToPos(250, -100, floorY2, 0)\n    SuctionHandle(True)\n    GoToPos(220, 100, floorY1, 0)\n    SuctionHandle(False)\n    GoToPos(250, 0, 50, 0)\n    GoToPos(250, -100, floorY1, 0)\n    SuctionHandle(True)\n    GoToPos(220, 100, floorY2, 0)\n    SuctionHandle(False)\n    GoToPos(250, 0, 50, 0)\n    GoToPos(220, 100, floorY2, 0)\n    SuctionHandle(True)\n    GoToPos (250, 100, floorY1, 0)\n    SuctionHandle(False)\n    GoToPos (220, 100, floorY1, 0)\n    SuctionHandle(True)\n    GoToPos (250, 100, floorY2, 0)\n    SuctionHandle(False)\n</code></pre>"},{"location":"komendy/","title":"EXTRA","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"komendy/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"pydobot/","title":"BIBLIOTEKA PYDOBOT","text":"<p>Pydobot to niezwykle przydatna biblioteka, kt\u00f3ra umo\u017cliwia sterowanie ramieniem robota Dobot Magician bezpo\u015brednio z poziomu j\u0119zyka Python. Stworzona z my\u015bl\u0105 o prostocie i dost\u0119pno\u015bci, pozwala na \u0142atwe \u0142\u0105czenie si\u0119 z robotem i wydawanie mu polece\u0144, bez potrzeby korzystania z jego natywnego oprogramowania.</p> <p>Biblioteka stanowi pomost mi\u0119dzy twoim kodem w Pythonie a ramieniem robota, komunikuj\u0105c si\u0119 z nim przez port szeregowy (USB). Jej kluczowe cechy to:</p> <ul> <li>Prosta instalacja: Mo\u017cna j\u0105 zainstalowa\u0107 za pomoc\u0105 mened\u017cera pakiet\u00f3w pip.</li> <li>Intuicyjne metody: Udost\u0119pnia \u0142atwe w u\u017cyciu funkcje do sterowania ruchem, chwytakiem, czy przyssawk\u0105.</li> <li>Wsparcie dla r\u00f3\u017cnych system\u00f3w: Dzia\u0142a na systemach Windows, macOS i Linux.</li> </ul>"},{"location":"pydobot/#jak-zaczac","title":"JAK ZACZ\u0104\u0106?","text":"<p>Do rozpocz\u0119cia pracy, potrzebny nam b\u0119dzie edytor kodu (zalecamy Visual Studio Code lub PyCharm), sterownik do portu wirtualnego oraz oczywi\u015bcie zainstalowany Python na naszym komputerze.</p> <p>Adresy do stron</p> <p>Visual Studio Code: https://code.visualstudio.com/download PyCharm: https://www.jetbrains.com/pycharm/download/ Sterownik CP210x: https://www.silabs.com/software-and-tools/usb-to-uart-bridge-vcp-drivers?tab=downloads Python: https://www.python.org/downloads/</p> <ol> <li>     Otw\u00f3rz Terminal i wprowad\u017a nast\u0119puj\u0105c\u0105 komend\u0119 instalacyjn\u0105     <pre><code>pip install pydobot\n</code></pre>     Mo\u017cesz r\u00f3wnie\u017c zainstalowa\u0107 bibliotek\u0119 w konkretnej lokalizacji:     <pre><code>pip install --target=\u015aCIE\u017bKA_FOLDERU pydobot\n</code></pre> </li> <li>Zainstaluj wcze\u015bniej wspomniany sterownik</li> <li>Pod\u0142\u0105cz Dobota do komputera do\u0142\u0105czonym do zestawu kablem USB</li> <li>Ustaw rami\u0119 robota w odpowiedniej pozycji - tak aby p\u00f3\u017aniejsze ruchy nie powodowa\u0142y zaci\u0119\u0107 oraz aby ustalanie koordynat by\u0142o \u0142atwiejsze</li> <li>W\u0142\u0105cz robota, zaczekaj a\u017c dioda na jego podstawie zmieni kolor na zielony</li> <li>Zacznij programowa\u0107. Aby przekaza\u0107 kod do Dobota, post\u0119puj w ten sam spos\u00f3b jak przy uruchamianiu normalnego kodu konsolowego</li> </ol>"},{"location":"pydobot/#kluczowe-metody-biblioteki","title":"KLUCZOWE METODY BIBLIOTEKI","text":"<p>Tworzy instancj\u0119 robota, \u0142\u0105cz\u0105c si\u0119 z danym portem szeregowym <pre><code>Dobot(port, verbose=False)\n</code></pre></p> <p>Zwraca aktualn\u0105 pozycj\u0119 robota jako krotk\u0119 (x, y, z, r, j1, j2, j3, j4) <pre><code>.pose()\n</code></pre></p> <p>Dodaje do kolejki ruch do podanych wsp\u00f3\u0142rz\u0119dnych. Parametr wait sprawia, \u017ce program czeka na zako\u0144czenie ruchu <pre><code>.move_to(x, y, z, r, wait=False)\n</code></pre></p> <p>Steruje przyssawk\u0105 (True/False) <pre><code>.suck(enable)\n</code></pre></p> <p>Steruje chwytakiem (True/False) <pre><code>.grip(enable)\n</code></pre></p> <p>Zmienia pr\u0119dko\u015b\u0107 i przyspieszenie ruchu robota <pre><code>.speed(velocity, acceleration)\n</code></pre></p> <p>Dodaje do kolejki czas, kt\u00f3ry ma up\u0142yn\u0105\u0107 przez wznowieniem w\u0105tku (milisekundy) <pre><code>.wait(ms)\n</code></pre></p> <p>Zamyka po\u0142\u0105czenie z robotem <pre><code>.close()\n</code></pre>  Przyk\u0142adowy program:</p> <pre><code>from serial.tools import list_ports\n\nimport pydobot\n\navailable_ports = list_ports.comports()\nport = available_ports[0].device\n\ndevice = pydobot.Dobot(port=port, verbose=True) # konstruktor\n\n(x, y, z, r, j1, j2, j3, j4) = device.pose()  # pobiera aktualne po\u0142o\u017cenie ramienia robota\nprint(f'x:{x} y:{y} z:{z} j1:{j1} j2:{j2} j3:{j3} j4:{j4}')\n\ndevice.move_to(x + 20, y, z, r, wait=False)\ndevice.move_to(x, y, z, r, wait=True)\n\ndevice.close() # roz\u0142\u0105czenie\n</code></pre>"}]}